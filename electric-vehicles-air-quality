{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceType":"datasetVersion","sourceId":8991634,"datasetId":5415808,"databundleVersionId":9157219}],"dockerImageVersionId":30822,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport kagglehub\n\n# Download latest version\npath = kagglehub.dataset_download(\"patricklford/global-ev-sales-2010-2024\")\n\nprint(\"Path to dataset files:\", path)","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-12-19T13:57:20.556298Z","iopub.execute_input":"2024-12-19T13:57:20.556640Z","iopub.status.idle":"2024-12-19T13:57:21.934688Z","shell.execute_reply.started":"2024-12-19T13:57:20.556609Z","shell.execute_reply":"2024-12-19T13:57:21.933836Z"}},"outputs":[{"name":"stdout","text":"Path to dataset files: /kaggle/input/global-ev-sales-2010-2024\n","output_type":"stream"}],"execution_count":13},{"cell_type":"markdown","source":"# Initialize the Pandas Data-Frame","metadata":{}},{"cell_type":"code","source":"dataset_name = path + \"/IEA Global EV Data 2024.csv\"\npandas_frame = pd.read_csv(dataset_name)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-19T13:57:21.935794Z","iopub.execute_input":"2024-12-19T13:57:21.936108Z","iopub.status.idle":"2024-12-19T13:57:21.960018Z","shell.execute_reply.started":"2024-12-19T13:57:21.936073Z","shell.execute_reply":"2024-12-19T13:57:21.959240Z"}},"outputs":[],"execution_count":14},{"cell_type":"code","source":"pandas_frame.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-19T13:57:21.961767Z","iopub.execute_input":"2024-12-19T13:57:21.962144Z","iopub.status.idle":"2024-12-19T13:57:21.974299Z","shell.execute_reply.started":"2024-12-19T13:57:21.962086Z","shell.execute_reply":"2024-12-19T13:57:21.973088Z"}},"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"      region    category       parameter  mode powertrain  year      unit  \\\n0  Australia  Historical  EV stock share  Cars         EV  2011   percent   \n1  Australia  Historical  EV sales share  Cars         EV  2011   percent   \n2  Australia  Historical        EV sales  Cars        BEV  2011  Vehicles   \n3  Australia  Historical        EV stock  Cars        BEV  2011  Vehicles   \n4  Australia  Historical        EV stock  Cars        BEV  2012  Vehicles   \n\n       value  \n0    0.00039  \n1    0.00650  \n2   49.00000  \n3   49.00000  \n4  220.00000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>region</th>\n      <th>category</th>\n      <th>parameter</th>\n      <th>mode</th>\n      <th>powertrain</th>\n      <th>year</th>\n      <th>unit</th>\n      <th>value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Australia</td>\n      <td>Historical</td>\n      <td>EV stock share</td>\n      <td>Cars</td>\n      <td>EV</td>\n      <td>2011</td>\n      <td>percent</td>\n      <td>0.00039</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Australia</td>\n      <td>Historical</td>\n      <td>EV sales share</td>\n      <td>Cars</td>\n      <td>EV</td>\n      <td>2011</td>\n      <td>percent</td>\n      <td>0.00650</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Australia</td>\n      <td>Historical</td>\n      <td>EV sales</td>\n      <td>Cars</td>\n      <td>BEV</td>\n      <td>2011</td>\n      <td>Vehicles</td>\n      <td>49.00000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Australia</td>\n      <td>Historical</td>\n      <td>EV stock</td>\n      <td>Cars</td>\n      <td>BEV</td>\n      <td>2011</td>\n      <td>Vehicles</td>\n      <td>49.00000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Australia</td>\n      <td>Historical</td>\n      <td>EV stock</td>\n      <td>Cars</td>\n      <td>BEV</td>\n      <td>2012</td>\n      <td>Vehicles</td>\n      <td>220.00000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":15},{"cell_type":"markdown","source":"# Filter the DataFrame for the relevant metric (EV stock share)","metadata":{}},{"cell_type":"markdown","source":"Filtering the dataframe for the stock share metric and exclude fields that are not relevant for further calculations.","metadata":{}},{"cell_type":"code","source":"filtered_frame = pandas_frame[pandas_frame['parameter'] == 'EV stock share'][['region', 'year', 'value']].copy()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-19T13:57:45.701705Z","iopub.execute_input":"2024-12-19T13:57:45.702030Z","iopub.status.idle":"2024-12-19T13:57:45.717349Z","shell.execute_reply.started":"2024-12-19T13:57:45.702003Z","shell.execute_reply":"2024-12-19T13:57:45.716331Z"}},"outputs":[],"execution_count":18},{"cell_type":"code","source":"filtered_frame.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-19T13:57:49.838908Z","iopub.execute_input":"2024-12-19T13:57:49.839256Z","iopub.status.idle":"2024-12-19T13:57:49.848657Z","shell.execute_reply.started":"2024-12-19T13:57:49.839227Z","shell.execute_reply":"2024-12-19T13:57:49.847736Z"}},"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"       region  year    value\n0   Australia  2011  0.00039\n7   Australia  2012  0.00240\n12  Australia  2013  0.00460\n19  Australia  2014  0.01400\n24  Australia  2015  0.02700","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>region</th>\n      <th>year</th>\n      <th>value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Australia</td>\n      <td>2011</td>\n      <td>0.00039</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Australia</td>\n      <td>2012</td>\n      <td>0.00240</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Australia</td>\n      <td>2013</td>\n      <td>0.00460</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Australia</td>\n      <td>2014</td>\n      <td>0.01400</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>Australia</td>\n      <td>2015</td>\n      <td>0.02700</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":19}]}